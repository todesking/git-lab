#!/bin/sh
set -e

function help() {
	cat <<-EOS
git lab <command>
command:
  open
    open project page
  open-commit <file> <line>
    open commit page that specified line last changed
  open-file <file>
    open the file page at HEAD

config:
  gitlab[<host>]
    rooturl
	EOS
}

function abort_if_root_url_not_set() {
	if [ "$(get_root_url)" == "" ]; then
		echo "config gitlab.$(get_remote_host).rooturl is not set"
		exit 1
	fi
}

function get_remote_host() {
	git remote -v | head -n1 | gsed 's/.*@\(.\+\):.*/\1/'
}

function get_root_url() {
	git config --get gitlab.$(get_remote_host).rooturl | gsed 's/\/\+$//'
}

function get_project() {
	git remote -v | head -n1 | gsed 's/.*:\(.\+\)\.git.*/\1/'
}

function get_project_root_url() {
	echo "$(get_root_url)/$(get_project)"
}

function command_open_commit() {
	if [ $# != 2 ]; then
		echo "USAGE: open-commit <file> <line>"
		return 1
	fi
	abort_if_root_url_not_set
	local file=$1
	local line=$2
	local commit=$(git blame -L "$line,$line" -l "$file" | cut -d' ' -f1)
	open "$(get_project_root_url)/commit/$commit"
}

function command_open() {
	abort_if_root_url_not_set
	open $(get_project_root_url)
}

function command_open_file() {
	abort_if_root_url_not_set
	local file=$1
	local path=$(git ls-files "$file")
	local hash=$(git show --pretty=oneline @ | head -n 1 | cut -f 1 -d ' ')
	open "$(get_project_root_url)/tree/${hash}/${path}"
}

command=$1
if [ "$command" != "" ]; then
	shift
fi

case "$command" in
	"open-commit" ) command_open_commit "$@" ;;
	"open-file" ) command_open_file "$@" ;;
	"open" ) command_open ;;
	*) help ;;
esac

